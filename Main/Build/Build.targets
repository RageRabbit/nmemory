<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0" DefaultTargets="default">
  <PropertyGroup>
    <BaseDir>$(MSBuildProjectDirectory)\..</BaseDir>
    <TempDir>$(MSBuildProjectDirectory)\_temp</TempDir>
    <PackageDir>$(MSBuildProjectDirectory)\Packages</PackageDir>
    <SolutionDir>$(BaseDir)\Source</SolutionDir>
    <NMemoryNugetPackageDir>NMemoryNuget</NMemoryNugetPackageDir>
    <NMemoryZipPackageDir>NMemoryZip</NMemoryZipPackageDir>

    <SignAssembly Condition="$(SignAssembly) == ''">False</SignAssembly>
    <RunTests Condition="$(RunTests) == ''">False</RunTests>
  </PropertyGroup>

  <ItemGroup>
    <CompileConfig Include="Release">
      <NugetDir>lib\net40</NugetDir>
      <ZipDir>.</ZipDir>
    </CompileConfig>
  </ItemGroup>

  <Target Name="default" DependsOnTargets="Initialize; Compile; RunTests; Collect; NugetPackage; ZipPackage; Cleanup" />

  <Target Name="Initialize">
    <RemoveDir Directories="$(TempDir)" />
    <RemoveDir Directories="$(PackageDir)" />
    <MakeDir Directories="$(PackageDir)" />
  </Target>

  <Target Name="Compile" Outputs="%(CompileConfig.Identity)">
    <PropertyGroup>
      <SigningKeyDir>$(BaseDir)\Build</SigningKeyDir>
      <PublicKey>$(SigningKeyDir)\PublicKey.snk</PublicKey>
      <KeyPair>$(SigningKeyDir)\KeyPair.snk</KeyPair>
      <KeyPairAvailable>False</KeyPairAvailable>
      <KeyPairAvailable Condition="Exists('$(KeyPair)')">True</KeyPairAvailable>
      <KeyFile Condition="$(KeyPairAvailable)">$(KeyPair)</KeyFile>
      <KeyFile Condition="!$(KeyPairAvailable)">$(PublicKey)</KeyFile>
      <DelaySign>True</DelaySign>
      <DelaySign Condition="$(KeyPairAvailable)">False</DelaySign>

      <BuildProperties>
        Configuration=%(CompileConfig.Identity);
      </BuildProperties>
    
      <BuildProperties Condition="$(SignAssembly)">
        $(BuildProperties)
        SignAssembly=True;
        DelaySign=$(DelaySign);
        AssemblyOriginatorKeyFile=$(KeyFile);
      </BuildProperties>
    </PropertyGroup>
    
    <ItemGroup>
      <BuildProjects Include="$(SolutionDir)\NMemory\NMemory.csproj" />
      <BuildProjects Include="$(SolutionDir)\NMemory.Test\NMemory.Test.csproj" Condition="$(RunTests)=='True'" />
    </ItemGroup>
    
    <RemoveDir Directories="$(SolutionDir)\NMemory\bin\$(Configuration)\" />

    <Message
      Importance="High"
      Text="Build task with &quot;%(CompileConfig.Identity)&quot; configuration" />

    <Message 
      Importance="High" 
      Text="Assembly signing is enabled" 
      Condition="$(SignAssembly)" />
    
    <Message 
      Importance="High" 
      Text="Key pair was not found, executing delayed signing!" 
      Condition="$(SignAssembly) And ! $(KeyPairAvailable)" />
    
    <MSBuild Projects="@(BuildProjects)" Properties="$(BuildProperties)" />
  </Target>

  <Target Name="RunTests" Condition="$(RunTests)=='True'" Outputs="%(CompileConfig.Identity)">
    <PropertyGroup>
      <TestSuccess>1</TestSuccess>
    </PropertyGroup>
    <Message Text="Run tests" />
    <Exec Command="&quot;$(VS110COMNTOOLS)..\IDE\mstest.exe&quot; /testcontainer:&quot;$(SolutionDir)\NMemory.Test\bin\%(CompileConfig.Identity)\NMemory.Test.dll&quot; /testsettings:&quot;$(SolutionDir)\Local.testsettings&quot;">
      <Output TaskParameter="ExitCode" PropertyName="TestSuccess"/>
    </Exec>
    <Error Text="One or more tests failed" Condition="'$(TestSuccess)'!='0'" />
  </Target>

  <Target Name="Collect" Outputs="%(CompileConfig.Identity)">
    <PropertyGroup>
      <SourceDir>$(SolutionDir)\NMemory\bin\%(CompileConfig.Identity)</SourceDir>
      <DestinationDirNuget>$(TempDir)\$(NMemoryNugetPackageDir)\%(CompileConfig.NugetDir)</DestinationDirNuget>
      <DestinationDirZip>$(TempDir)\$(NMemoryZipPackageDir)\%(CompileConfig.ZipDir)</DestinationDirZip>
    </PropertyGroup>
    <ItemGroup>
      <SourceFilesCommon Include="$(SourceDir)\NMemory.dll"/>
      <SourceFilesCommon Include="$(SourceDir)\NMemory.xml"/>
    </ItemGroup>
    
    <Copy Condition="%(CompileConfig.NugetDir) != ''"
          SourceFiles="@(SourceFilesCommon)"
          DestinationFolder="$(DestinationDirNuget)" />
    <Copy Condition="%(CompileConfig.ZipDir) != ''"
          SourceFiles="@(SourceFilesCommon)"
          DestinationFolder="$(DestinationDirZip)" />
  </Target>

  <Target Name="NugetPackage">
    <PropertyGroup>
      <PackageStructureDir>$(TempDir)\$(NMemoryNugetPackageDir)</PackageStructureDir>
    </PropertyGroup>

    <Copy
        SourceFiles="$(MSBuildProjectDirectory)\NMemory.nuspec"
        DestinationFolder="$(PackageStructureDir)" />

    <!-- Currently there is no net45 build, so the net40 dir is cloned -->
    <ItemGroup>
      <net40Files Include="$(PackageStructureDir)\lib\net40\**\*.*"/>
    </ItemGroup>
    <Copy Condition="! Exists('$(PackageStructureDir)\lib\net45')"
          SourceFiles="@(net40Files)"
          DestinationFolder="$(PackageStructureDir)\lib\net45\%(RecursiveDir)" />

    <Exec
        WorkingDirectory="$(PackageStructureDir)"
        Command="&quot;$(SolutionDir)\.nuget\nuget.exe&quot; pack &quot;$(PackageStructureDir)\NMemory.nuspec&quot;" />

    <ItemGroup>
      <NugetPackage Include="$(PackageStructureDir)\*.nupkg"/>
    </ItemGroup>
    
    <Move SourceFiles="@(NugetPackage)"
          DestinationFolder="$(PackageDir)" />
  </Target>

  <Target Name="ZipPackage">
    <CreateZip
        InputDirectory="$(TempDir)\$(NMemoryZipPackageDir)"
        OutputFile="$(PackageDir)\NMemory Library.zip" />
  </Target>

  <Target Name="Cleanup">
    <RemoveDir Directories="$(TempDir)" />
  </Target>

  <UsingTask TaskName="CreateZip"
      TaskFactory="CodeTaskFactory"
      AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <InputDirectory ParameterType="System.String" Required="true" />
      <OutputFile ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Reference Include="System.IO.Compression.FileSystem" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.IO.Compression" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Using Namespace="Microsoft.Build.Utilities" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          try {
            InputDirectory = Path.GetFullPath(InputDirectory);
            OutputFile = Path.GetFullPath(OutputFile);
                    
            ZipFile.CreateFromDirectory(InputDirectory, OutputFile);
                    
            return true;
          }
          catch (Exception ex) {
            Log.LogErrorFromException(ex);
            return false;
          }
       ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>